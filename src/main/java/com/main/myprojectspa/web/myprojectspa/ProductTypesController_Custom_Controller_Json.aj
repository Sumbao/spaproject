// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.main.myprojectspa.web.myprojectspa;

import com.main.myprojectspa.domain.projectspa.ProductTypes;
import com.main.myprojectspa.web.myprojectspa.ProductTypesController;
import java.util.List;

import flexjson.JSONSerializer;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

privileged aspect ProductTypesController_Custom_Controller_Json {

    @RequestMapping(value = "/findallprotype", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> ProductTypesController.findallprotype() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        try {
            List<ProductTypes> result = ProductTypes.findAllProductTypeses();
            return new ResponseEntity<String>((new JSONSerializer().exclude("*.class")
                    .include("id")
                    .include("version")
                    .include("productTypesName")
                    .exclude("*")
                    .deepSerialize(result)),headers, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<String>("{\"ERROR\":"+e.getMessage()+"\"}", headers, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @RequestMapping(value="/createprotype",method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> ProductTypesController.createprotype(@RequestBody String json){
        ResponseEntity<String> status = null;
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        ProductTypes productTypes = ProductTypes.fromJsonToProductTypes(json);
        try {
            List<ProductTypes> list = ProductTypes.findprotypebyname(productTypes.getProductTypesName());
            if(list.size() == 0){
                productTypes.persist();
                status = new ResponseEntity<String>(headers, HttpStatus.CREATED);
            } else {
                status = new ResponseEntity<String>(headers, HttpStatus.CONFLICT);
            }
            return status;
        } catch (Exception e) {
            return new ResponseEntity<String>("{\"ERROR\":"+e.getMessage()+"\"}", headers, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }


}
